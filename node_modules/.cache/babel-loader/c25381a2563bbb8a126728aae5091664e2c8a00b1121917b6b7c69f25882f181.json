{"ast":null,"code":"// fichero src/service/localStorage.js\n// Funcion que obtiene una propiedad del LS, si esta no existe porque es la primera vez que la usuaria entra en la pag, la funcion devuelve el valor de defaultValue\n// Que esta funcion devuelva un valor por defecto es una comoda manera de trabajr, asi esta comprobacion no la tenemos que hacer en App,js\nvar get=function get(key,defaultValue){var localStorageData=localStorage.getItem(key);if(localStorageData===null){return defaultValue;}else{return JSON.parse(localStorageData);}};// Funcion que guarde una prop y su valor en el localStorage\nvar set=function set(key,value){var localStorageData=JSON.stringify(value);localStorage.setItem(key,localStorageData);};// funcion que borra una prop del localStorage\nvar remove=function remove(key){localStorage.removeItem(key);};// funcion que limpia todo el localStorage\nvar clear=function clear(){localStorage.clear();};//Creamos un obj temporal, que es el que queremos exportar, este tiene: \n// ? - prop get cuyo valor es la funcion get \n// ? - prop set cuyo valor es la funcion set\n// ? - prop remove cuyo valor es la funcion remove\n// ? - prop clear cuyo valor es la funcion clear\nvar objectToExport={get:get,set:set,remove:remove,clear:clear};// Todo exportamos el obj para que pueda ser usado desde APP\nexport default objectToExport;","map":{"version":3,"names":["get","key","defaultValue","localStorageData","localStorage","getItem","JSON","parse","set","value","stringify","setItem","remove","removeItem","clear","objectToExport"],"sources":["/home/adalaber/Escritorio/Adalab/evaluacion-intermedia-React/modulo-3-evaluacion-intermedia-Lurdesmg/src/service/localStorage.js"],"sourcesContent":["// fichero src/service/localStorage.js\n\n// Funcion que obtiene una propiedad del LS, si esta no existe porque es la primera vez que la usuaria entra en la pag, la funcion devuelve el valor de defaultValue\n// Que esta funcion devuelva un valor por defecto es una comoda manera de trabajr, asi esta comprobacion no la tenemos que hacer en App,js\nconst get =(key, defaultValue) => {\n    const localStorageData = localStorage.getItem(key);\n    if (localStorageData === null) {\n        return defaultValue;\n    } else {\n        return JSON.parse(localStorageData);\n    }\n};\n\n// Funcion que guarde una prop y su valor en el localStorage\nconst set = (key , value) => {\n    const localStorageData = JSON.stringify(value);\n    localStorage.setItem(key, localStorageData);\n};\n\n// funcion que borra una prop del localStorage\nconst remove = (key) => {\n    localStorage.removeItem(key);\n};\n\n// funcion que limpia todo el localStorage\nconst clear = () => {\n    localStorage.clear();\n};\n\n//Creamos un obj temporal, que es el que queremos exportar, este tiene: \n// ? - prop get cuyo valor es la funcion get \n// ? - prop set cuyo valor es la funcion set\n// ? - prop remove cuyo valor es la funcion remove\n// ? - prop clear cuyo valor es la funcion clear\n\nconst objectToExport = {\n    get: get,\n    set: set,\n    remove: remove,\n    clear: clear,\n};\n\n// Todo exportamos el obj para que pueda ser usado desde APP\nexport default objectToExport;"],"mappings":"AAAA;AAEA;AACA;AACA,GAAM,CAAAA,GAAG,CAAE,QAAL,CAAAA,GAAGA,CAAGC,GAAG,CAAEC,YAAY,CAAK,CAC9B,GAAM,CAAAC,gBAAgB,CAAGC,YAAY,CAACC,OAAO,CAACJ,GAAG,CAAC,CAClD,GAAIE,gBAAgB,GAAK,IAAI,CAAE,CAC3B,MAAO,CAAAD,YAAY,CACvB,CAAC,IAAM,CACH,MAAO,CAAAI,IAAI,CAACC,KAAK,CAACJ,gBAAgB,CAAC,CACvC,CACJ,CAAC,CAED;AACA,GAAM,CAAAK,GAAG,CAAG,QAAN,CAAAA,GAAGA,CAAIP,GAAG,CAAGQ,KAAK,CAAK,CACzB,GAAM,CAAAN,gBAAgB,CAAGG,IAAI,CAACI,SAAS,CAACD,KAAK,CAAC,CAC9CL,YAAY,CAACO,OAAO,CAACV,GAAG,CAAEE,gBAAgB,CAAC,CAC/C,CAAC,CAED;AACA,GAAM,CAAAS,MAAM,CAAG,QAAT,CAAAA,MAAMA,CAAIX,GAAG,CAAK,CACpBG,YAAY,CAACS,UAAU,CAACZ,GAAG,CAAC,CAChC,CAAC,CAED;AACA,GAAM,CAAAa,KAAK,CAAG,QAAR,CAAAA,KAAKA,CAAA,CAAS,CAChBV,YAAY,CAACU,KAAK,EAAE,CACxB,CAAC,CAED;AACA;AACA;AACA;AACA;AAEA,GAAM,CAAAC,cAAc,CAAG,CACnBf,GAAG,CAAEA,GAAG,CACRQ,GAAG,CAAEA,GAAG,CACRI,MAAM,CAAEA,MAAM,CACdE,KAAK,CAAEA,KACX,CAAC,CAED;AACA,cAAe,CAAAC,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}